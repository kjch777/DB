SELECT STUDENT_NAME AS "학생 이름", STUDENT_ADDRESS AS "학생 주소"
FROM TB_STUDENT
ORDER BY 1;

SELECT STUDENT_NAME AS "학생 이름", STUDENT_SSN AS "주민 번호"
FROM TB_STUDENT
ORDER BY 2 DESC;

SELECT STUDENT_NO AS "학번", STUDENT_NAME AS "학생 이름", STUDENT_ADDRESS AS "학생 주소"
FROM TB_STUDENT
WHERE STUDENT_ADDRESS LIKE '강원도%' OR STUDENT_ADDRESS LIKE '경기도%' AND STUDENT_NO NOT LIKE 'A%'
ORDER BY 2;


SELECT DEPARTMENT_NAME, DEPARTMENT_NO FROM TB_DEPARTMENT WHERE DEPARTMENT_NAME = '법학과';
SELECT PROFESSOR_NAME, PROFESSOR_SSN, DEPARTMENT_NO FROM TB_PROFESSOR WHERE DEPARTMENT_NO = 005;
-- ANSI 
SELECT PROFESSOR_NAME, PROFESSOR_SSN, DEPARTMENT_NO
FROM TB_PROFESSOR
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE DEPARTMENT_NO = 005
ORDER BY 2;
-- ORACLE
SELECT PROFESSOR_NAME, PROFESSOR_SSN, P.DEPARTMENT_NO
FROM TB_PROFESSOR P, TB_DEPARTMENT D 
WHERE P.DEPARTMENT_NO = 005
GROUP BY PROFESSOR_NAME, PROFESSOR_SSN, P.DEPARTMENT_NO
ORDER BY 2;


-- (참고) 소수점 아래 2자리까지 0으로 표현 : TO_CHAR(NUMBER, 'FM9.00')
-- (FM : 조회 결과 양쪽 공백 제거)
-- ANSI
SELECT STUDENT_NO, STUDENT_NAME, TERM_NO, CLASS_NO, TO_CHAR(POINT, 'FM9.00') AS "학점"
-- TO_CHAR(표시형식을바꿀칼럼명, '바꿔서출력할표시형식')
-- 'FM9.00' == FM: 조회 결과에서 양쪽 공백 제거, 9.00: 소수점 아래 2자리까지 표시(표시할 숫자가 없을 경우엔 0 으로 표시)
FROM TB_STUDENT
JOIN TB_GRADE USING(STUDENT_NO)
WHERE TERM_NO = 200402 AND CLASS_NO = 'C3118100'
ORDER BY "학점" DESC;
-- ORACLE


-- ANSI
SELECT STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
ORDER BY 2;
-- ORACLE
SELECT STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME
FROM TB_STUDENT S, TB_DEPARTMENT D
WHERE S.DEPARTMENT_NO = D.DEPARTMENT_NO
ORDER BY 2;


-- ANSI
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO);
-- ORACLE
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS C, TB_DEPARTMENT D
WHERE C.DEPARTMENT_NO = D.DEPARTMENT_NO;


-- 과목, 해당 과목 교수 이름을 조회하시오.
-- TB_CLASS_PROFESSOR : 과목별 교수의 정보를 저장한 테이블(과목 코드, 학과 코드)
-- ANSI
-- TB_CLASS와  TB_PROFESSOR 테이블이 공통으로
-- DEPARTMENT_NO 컬럼을 가지고 있다 해서 이를 이용해서 JOIN을 하면 안됨!
-- ORACLE


-- 9번
-- 8번의 결과 중 '인문 사회' 계열에 속한 과목명, 교수이름을 과목명 오름차순으로 조회하시오.

-- ANSI
-- ORACLE

                        
-- ANSI
SELECT STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME, ROUND(AVG(POINT), 1)
FROM TB_GRADE
JOIN TB_STUDENT USING(STUDENT_NO)
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '음악학과'
GROUP BY STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME;
-- ORACLE




SELECT STUDENT_NAME, DEPARTMENT_NO, COACH_PROFESSOR_NO FROM TB_STUDENT WHERE STUDENT_NO = 'A313047';
SELECT PROFESSOR_NAME FROM TB_PROFESSOR WHERE DEPARTMENT_NO = 008;

-- ANSI
SELECT DEPARTMENT_NAME, STUDENT_NAME, PROFESSOR_NAME
FROM TB_STUDENT
JOIN TB_PROFESSOR USING(DEPARTMENT_NO)
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE STUDENT_NO = 'A313047';
-- ORACLE


-- 12번
-- 2007년도에 '인간관계론' 과목을 수강한 학생을 찾아 
-- 학생이름과 수강학기를 조회하는 SQL을 작성하시오.

-- ANSI
-- ORACLE


-- 13번
-- 예체능 계열 과목 중 과목 담당교수를 한 명도 배정받지 못한 과목을 찾아 
-- 과목 이름, 학과 이름을 조회하시오.

-- ANSI
-- ORACLE

-- 14번
-- 춘 기술대학교 서반아어학과 학생들의 지도교수를 게시하고자 한다. 
-- 학생이름, 지도교수이름 학번이 높은 순서로 조회하는 SQL을 작성하시오.
-- 단, 지도교수가 없을 경우 "지도교수 미지정"으로 표시

-- ANSI
-- ORACLE


-- 15번
-- 휴학생이 아닌 학생 중 평점이 4.0 이상인 학생을 찾아 
-- 학생의 학번, 이름, 학과, 이름, 평점을 조회하시오.

-- ANSI
-- ORACLE



-- 16번
-- 환경조경학과 전공과목들의 과목 별 평점을 조회하시오.
-- (평점은 TRUNC를 이용해 소수점 아래 둘째 자리까지 표시)
-- ANSI

-- ORACLE


-- 17번
-- 춘 기술대학교에 다니고 있는 최경희 학생과 같은 과 학생들의 이름과 주소를 조회하시오.
       
  
-- 18번
-- 국어국문학과에서 총 평점이 가장 높은 학생의 이름과 학번을 조회하시오
SELECT STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME, MAX(SUM(POINT)) AS "총 평점"
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
JOIN TB_GRADE USING (STUDENT_NO)
WHERE DEPARTMENT_NAME = '국어국문학과'
GROUP BY STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME
HAVING MAX(SUM(POINT));




-- 19번
-- 춘 기술대학교의 "환경조경학과"가 속한 같은 계열 학과들의 
-- 학과 별 전공과목 평점을 파악하기 위한 적절한 SQL문을 작성하시오
-- 단, 출력헤더는 "계열 학과명", "전공평점"으로 표시되도록 하고, 
-- 평점은 소수점 첫째자리까지만 반올림하여 표시

-- ANSI
-- ORACLE