/***** JOIN 실습 *****/

SELECT * FROM EMPLOYEE;
-- DEPT_CODE: D9
SELECT * FROM DEPARTMENT;
-- DEPT_ID: D9

SELECT EMP_NAME, DEPT_TITLE FROM EMPLOYEE JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID);
SELECT EMP_NAME, DEPT_TITLE FROM EMPLOYEE, DEPARTMENT WHERE DEPT_CODE = DEPT_ID;

SELECT EMP_NAME, DEPT_TITLE, SALARY FROM EMPLOYEE JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID);
SELECT EMP_NAME, DEPT_TITLE, SALARY FROM EMPLOYEE, DEPARTMENT WHERE DEPT_CODE = DEPT_ID;

SELECT EMP_NAME, EMPLOYEE.SAL_LEVEL FROM EMPLOYEE JOIN SAL_GRADE ON (EMPLOYEE.SAL_LEVEL = SAL_GRADE.SAL_LEVEL);
SELECT EMP_NAME, e.SAL_LEVEL FROM EMPLOYEE e, SAL_GRADE s WHERE e.SAL_LEVEL = s.SAL_LEVEL;
/*
서로 다른 테이블에서, 서로 다른 칼럼명을 가지고, 서로 같은 칼럼값을 가질 경우에는
칼럼명1 = 칼럼명2 형식으로만 작성해 주면 되지만,

서로 다른 테이블에서, 칼럼명이 서로 같을 경우에는
참조하는 테이블이 무엇인지 작성해 주어야 한다.

SELECT 절에서도 서로 겹치는 칼럼명 앞에 테이블명을 작성하여, 어디에서 칼럼을 가지고 오는지 명시해 주어야 한다.
*/

-- ANSI 형식
SELECT E.EMP_NAME, D.DEPT_TITLE, J.JOB_NAME 
FROM EMPLOYEE E 
JOIN DEPARTMENT D ON (E.DEPT_CODE = D.DEPT_ID) 
JOIN JOB J ON (E.JOB_CODE = J.JOB_CODE);

-- ORACLE 형식
SELECT E.EMP_NAME, D.DEPT_TITLE, J.JOB_NAME 
FROM EMPLOYEE E, DEPARTMENT D, JOB J 
WHERE E.DEPT_CODE = D.DEPT_ID AND E.JOB_CODE = J.JOB_CODE;


-- ANSI 형식
SELECT E.EMP_NAME, E.EMAIL, D.DEPT_TITLE
FROM EMPLOYEE E
JOIN DEPARTMENT D ON (E.DEPT_CODE = D.DEPT_ID);

-- ORACLE 형식
SELECT E.EMP_NAME, E.EMAIL, D.DEPT_TITLE
FROM EMPLOYEE E, DEPARTMENT D 
WHERE E.DEPT_CODE = D.DEPT_ID;


-- ANSI 형식
SELECT E.EMP_NAME, D.DEPT_TITLE, E.SALARY
FROM EMPLOYEE E
JOIN DEPARTMENT D ON E.DEPT_CODE = D.DEPT_ID
WHERE SALARY >= 3000000;

-- ORACLE 형식
SELECT E.EMP_NAME, D.DEPT_TITLE, E.SALARY
FROM EMPLOYEE E, DEPARTMENT D
WHERE E.DEPT_CODE = D.DEPT_ID AND SALARY >= 3000000;


-- ANSI 형식
SELECT E.EMP_NAME, D.DEPT_TITLE, S.SAL_LEVEL
FROM EMPLOYEE E
JOIN DEPARTMENT D ON E.DEPT_CODE = D.DEPT_ID
JOIN SAL_GRADE S ON E.SAL_LEVEL = S.SAL_LEVEL;

-- ORACLE 형식
SELECT E.EMP_NAME, D.DEPT_TITLE, S.SAL_LEVEL
FROM EMPLOYEE E, DEPARTMENT D, SAL_GRADE S
WHERE E.DEPT_CODE = D.DEPT_ID AND E.SAL_LEVEL = S.SAL_LEVEL;


-- ANSI 형식
SELECT E.EMP_ID, E.EMP_NAME, J.JOB_NAME, D.DEPT_TITLE, L.LOCAL_NAME, E.SALARY
FROM EMPLOYEE E
JOIN JOB J ON E.JOB_CODE = J.JOB_CODE
JOIN DEPARTMENT D ON E.DEPT_CODE = D.DEPT_ID
JOIN LOCATION L ON D.LOCATION_ID = L.LOCAL_CODE
WHERE J.JOB_NAME = '대리' AND L.LOCAL_NAME LIKE 'ASIA%';

-- ORACLE 형식
SELECT E.EMP_ID, E.EMP_NAME, J.JOB_NAME, D.DEPT_TITLE, L.LOCAL_NAME, E.SALARY
FROM EMPLOYEE E, JOB J, DEPARTMENT D, LOCATION L
WHERE E.JOB_CODE = J.JOB_CODE AND E.DEPT_CODE = D.DEPT_ID AND D.LOCATION_ID = L.LOCAL_CODE
AND J.JOB_NAME = '대리' AND L.LOCAL_NAME LIKE 'ASIA%';

/**********/

-- ANSI 형식
SELECT EMP_NAME, JOB_NAME
FROM EMPLOYEE
JOIN JOB USING (JOB_CODE)
WHERE DEPT_CODE = 'D5';

-- ORACLE 형식
SELECT E.EMP_NAME, J.JOB_NAME
FROM EMPLOYEE E, JOB J
WHERE E.JOB_CODE = J.JOB_CODE AND E.DEPT_CODE = 'D5';


-- ANSI 형식
SELECT DEPT_TITLE, ROUND(AVG(SALARY))
FROM EMPLOYEE
JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID
GROUP BY DEPT_TITLE;

-- ORACLE 형식
SELECT D.DEPT_TITLE, ROUND(AVG(E.SALARY))
FROM EMPLOYEE E, DEPARTMENT D
WHERE E.DEPT_CODE = D.DEPT_ID
GROUP BY D.DEPT_TITLE; 
-- GROUP BY 절에는 함수를 사용하지 않은 칼럼명 전부를 넣어주어야 한다.
-- HAVING 절에는 함수를 사용한 칼럼명을 넣어주어야 한다.


-- ANSI 형식
SELECT EMP_NAME, SALARY, SAL_LEVEL
FROM EMPLOYEE
JOIN SAL_GRADE USING (SAL_LEVEL)
WHERE SAL_LEVEL IN ('S4', 'S5', 'S6');

-- ORACLE 형식
SELECT E.EMP_NAME, E.SALARY, E.SAL_LEVEL
FROM EMPLOYEE E, SAL_GRADE S 
WHERE E.SAL_LEVEL = S.SAL_LEVEL AND E.SAL_LEVEL >= 'S4';